# Filename: cloudbuild.yaml

steps:
  # STEP 1: PRINT THE CONTENTS OF requirements.txt TO THE LOGS
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "---- Checking contents of requirements.txt ----"
        cat ./src/retrieval_service/requirements.txt
        echo "-------------------------------------------"

  # 2. Build the retrieval-service container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '--no-cache',
        '-t',
        'us-central1-docker.pkg.dev/${PROJECT_ID}/sara-repo/retrieval-service:latest',
        './src/retrieval_service',
      ]

  # 3. Push the retrieval-service image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/sara-repo/retrieval-service:latest']

  # 4. Build the frontend-service container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/sara-repo/frontend-service:latest', './src/frontend_service']

  # 5. Push the frontend-service image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/sara-repo/frontend-service:latest']

  # 6. Initialize Terraform
  - name: 'hashicorp/terraform:1.5.7'
    entrypoint: 'terraform'
    args: ['init']

  # 7. Apply Terraform configuration
  - name: 'hashicorp/terraform:1.5.7'
    entrypoint: 'terraform'
    args: ['apply', '-auto-approve']

# Store the images in Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/sara-repo/retrieval-service:latest'
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/sara-repo/frontend-service:latest'

# Set the logging option
options:
  logging: CLOUD_LOGGING_ONLY