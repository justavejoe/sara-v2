# A generic, single database configuration.

[alembic]
# path to migration scripts
# This is the simplified, more direct path to your scripts.
script_location = alembic

# This is the crucial line that allows Alembic to find your local code.
prepend_sys_path = .

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
# leave blank for localtime
# timezone =

# max length of characters to apply to the "slug" field
truncate_slug_length = 40

# The database URL. This is correct as you had it.
#sqlalchemy.url = postgresql+psycopg2://${DB_USER}:${DB_PASS}@/${DB_NAME}?host=/cloudsql/${PROJECT_ID}:${REGION}:${DB_INSTANCE}
#sqlalchemy.url = sqlite:///alembic.db
sqlalchemy.url = postgresql+psycopg2://${DB_USER}:${DB_PASS}@/${DB_NAME}?host=/cloudsql/${PROJECT_ID}:${REGION}:${DB_INSTANCE}

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.
# See the documentation for further detail and examples.
# hooks =
# hook_name.type = exec
# hook_name.executable = /path/to/my/exe
# hook_name.options = --foo --bar REVISION_SCRIPT_FILENAME


# Logging configuration.
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S